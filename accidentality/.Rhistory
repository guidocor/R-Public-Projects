# que no son los de entrenamiento : )
df.hora.test <-   df.hora.n[!train,]
df.hora.test$pred_n <- predict(mod.horas.gam, df.hora.test, type="response")
df.hora.test$res_n <- df.hora.test$n - df.hora.test$pred_n
hist(df.hora.test$res_n)
sqrt(mean(df.hora.test$res_n**2 ))
# [1] 5.773248
#  Vemos que un RMSE muy parecido
qqnorm(df.hora.test$res_n)
# Ahora vamos a por un gráfico que nos diga las horas que hay más accidentes
# en Madrid
df.hora.n$pred <- predict(mod.horas.gam, df.hora.n, type="response")
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred, col=ano)) +
geom_line(size=1) +
geom_point(aes(y=n), col = "black", alpha=0.05) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
ggsave(predicciones, filename = "plots/predicciones.png")
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred, col=ano)) +
geom_line(size=2) +
geom_point(aes(y=n), col = "black", alpha=0.03) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred, col=ano)) +
geom_line(size=2, alpha=.5) +
geom_point(aes(y=n), col = "black", alpha=0.03) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred)) +
geom_line(size=2, alpha=.5) +
geom_point(aes(y=n), col = "black", alpha=0.03) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred)) +
geom_line(size=2, alpha=.5, col = "red") +
geom_point(aes(y=n), col = "black", alpha=0.03) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
# Ahora vamos a por un gráfico que nos diga las horas que hay más accidentes
# en Madrid
df.hora.n$pred <- predict(mod.horas.gam, df.hora.n, type="response", terms = "ano" )
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred)) +
geom_line(size=2, alpha=.5, col = "red") +
geom_point(aes(y=n), col = "black", alpha=0.03) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
# Ahora vamos a por un gráfico que nos diga las horas que hay más accidentes
# en Madrid
df.hora.n$pred <- predict(mod.horas.gam, df.hora.n, type="response", terms = "mes" )
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred)) +
geom_line(size=2, alpha=.5, col = "red") +
geom_point(aes(y=n), col = "black", alpha=0.03) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
# Ahora vamos a por un gráfico que nos diga las horas que hay más accidentes
# en Madrid
df.hora.n$pred <- predict(mod.horas.gam, df.hora.n, type="response", terms = "dia" )
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred)) +
geom_line(size=2, alpha=.5, col = "red") +
geom_point(aes(y=n), col = "black", alpha=0.03) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
# Ahora vamos a por un gráfico que nos diga las horas que hay más accidentes
# en Madrid
df.hora.n$pred <- predict(mod.horas.gam, df.hora.n, type="response" )
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred)) +
geom_line(size=2, alpha=.5, col = "red") +
geom_point(aes(y=n), col = "black", alpha=0.03) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
# Vamos a poner el año y el mes como efecto aleatorio y
# establecer la hora cmo un predictor con un máximo de
# 23 'nudos' que vienen a ser las 24 horas, menos uno.
# la función de enlace será una quassipoisson, pues
# no contamos con que la media sea igual a la varianza
mod.horas.gam <- gam(n ~ s(hora, k = 23) +  s(mes, bs="re"),
family=quasipoisson,
data = df.hora.train)
(gam.summary <- summary(mod.horas.gam))
gam.summary$r.sq
# Hacemos predicciones con el modelo
df.hora.train$pred <- predict(mod.horas.gam, type = "response" )
df.hora.train$res <- df.hora.train$n - df.hora.train$pred
# calculamos el RMSE
sqrt(mean(df.hora.train$res**2 ))
# ahora vamos a ver que tal se porta el modelo con datos
# que no son los de entrenamiento : )
df.hora.test <-   df.hora.n[!train,]
df.hora.test$pred_n <- predict(mod.horas.gam, df.hora.test, type="response")
df.hora.test$res_n <- df.hora.test$n - df.hora.test$pred_n
hist(df.hora.test$res_n)
sqrt(mean(df.hora.test$res_n**2 ))
# [1] 5.773248
#  Vemos que un RMSE muy parecido
qqnorm(df.hora.test$res_n)
# Ahora vamos a por un gráfico que nos diga las horas que hay más accidentes
# en Madrid
df.hora.n$pred <- predict(mod.horas.gam, df.hora.n, type="response" )
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred)) +
geom_line(size=2, alpha=.5, col = "red") +
geom_point(aes(y=n), col = "black", alpha=0.03) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
df.hora.n$ano_int <- integer(df.hora.n$ano)
df.hora.n$ano_int <- integer(df.hora.n$ano)
df.hora.n$ano_int <- as.integer(df.hora.n$ano)
df.hora.n$mes <- factor(df.hora.n$mes)
contrasts(df.hora.n$mes) <- contr.sum
# Separamos en datos de entrenamiento y de testeo
train <- ifelse(runif(nrow(df.hora.n)) < 0.8, TRUE, FALSE)
df.hora.train <-  df.hora.n[train,]
df.hora.train %>% head
# Vamos a poner el año y el mes como efecto aleatorio y
# establecer la hora cmo un predictor con un máximo de
# 23 'nudos' que vienen a ser las 24 horas, menos uno.
# la función de enlace será una quassipoisson, pues
# no contamos con que la media sea igual a la varianza
mod.horas.gam <- gam(n ~ s(hora, k = 23) +  s(mes, bs="re"),
family=quasipoisson,
data = df.hora.train)
# Vamos a poner el año y el mes como efecto aleatorio y
# establecer la hora cmo un predictor con un máximo de
# 23 'nudos' que vienen a ser las 24 horas, menos uno.
# la función de enlace será una quassipoisson, pues
# no contamos con que la media sea igual a la varianza
mod.horas.gam <- gam(n ~ s(hora, k = 23) +  s(mes, bs="re") +s(ano),
family=quasipoisson,
data = df.hora.train)
# Vamos a poner el año y el mes como efecto aleatorio y
# establecer la hora cmo un predictor con un máximo de
# 23 'nudos' que vienen a ser las 24 horas, menos uno.
# la función de enlace será una quassipoisson, pues
# no contamos con que la media sea igual a la varianza
mod.horas.gam <- gam(n ~ s(hora, k = 23) +  s(mes, bs="re") +s(ano_int),
family=quasipoisson,
data = df.hora.train)
unique(df.hora.train$ano_int)
# Vamos a poner el año y el mes como efecto aleatorio y
# establecer la hora cmo un predictor con un máximo de
# 23 'nudos' que vienen a ser las 24 horas, menos uno.
# la función de enlace será una quassipoisson, pues
# no contamos con que la media sea igual a la varianza
mod.horas.gam <- gam(n ~ s(hora, k = 23) +  s(mes, bs="re") +s(ano_int, k = 7),
family=quasipoisson,
data = df.hora.train)
(gam.summary <- summary(mod.horas.gam))
media_dia
accidentes_exploratorio
View(df.dia)
df.ano <- group_by(ano) %>% summarise(n = sum(n))
df.ano <- df.dia %>%  group_by(ano) %>% summarise(n = sum(n))
View(df.ano)
accidentes_año <- ggplot(df.ano , aes(x=n)) + geom_bar()
accidentes_año
accidentes_año <- ggplot(df.ano , aes(x=ano)) + geom_bar()
accidentes_año
accidentes_año <- ggplot(df.ano , aes(x=ano, y = n)) + geom_bar()
accidentes_año
accidentes_año <- ggplot(df.ano , aes(x=ano, y = n)) + geom_point()
accidentes_año
accidentes_año <- ggplot(df.ano , aes(x=ano, y = n)) + geom_point(size = 4)
accidentes_año
accidentes_año <- ggplot(df.ano , aes(x=ano, y = n)) +
geom_point(size = 4) +
ylim(0,2000)
accidentes_año
accidentes_año <- ggplot(df.ano , aes(x=ano, y = n)) +
geom_point(size = 4) +
ylim(0,20000)
accidentes_año
accidentes_año <- ggplot(df.ano , aes(x=ano, y = n)) +
geom_point(size = 4) +
ylim(0,21000)
accidentes_año
accidentes_año <- ggplot(df.ano , aes(x=ano, y = n)) +
geom_point(size = 4) +
geom_smooth() +
ylim(0,21000)
accidentes_año
accidentes_año <- ggplot(df.ano , aes(x=ano, y = n)) +
geom_point(size = 4) +
geom_smooth(method="lm") +
ylim(0,21000)
accidentes_año
accidentes_año <- ggplot(df.ano , aes(x=ano, y = n)) +
geom_point(size = 4) +
geom_smooth(method="lm") +
ggtitle("Número total de accidente por año en Madrid") +
ylim(0,21000)
accidentes_año
ggsave(accidentes_año , filename = "plots/accidentes_año.png")
# Vamos a poner el año y el mes como efecto aleatorio y
# establecer la hora como un predictor con un máximo de
# 23 'nudos' que vienen a ser las 24 horas, menos uno.
# y añadir el año como efecto
# La función de enlace será una quassipoisson, pues
# no contamos con que la media sea igual a la varianza
mod.horas.gam <- gam(n ~ s(hora, k = 23) +  s(mes, bs="re")  + ano,
family=quasipoisson,
data = df.hora.train)
(gam.summary <- summary(mod.horas.gam))
gam.summary$r.sq
# Hacemos predicciones con el modelo
df.hora.train$pred <- predict(mod.horas.gam, type = "response" )
df.hora.train$res <- df.hora.train$n - df.hora.train$pred
# calculamos el RMSE
sqrt(mean(df.hora.train$res**2 ))
# ahora vamos a ver que tal se porta el modelo con datos
# que no son los de entrenamiento : )
df.hora.test <-   df.hora.n[!train,]
df.hora.test$pred_n <- predict(mod.horas.gam, df.hora.test, type="response")
df.hora.test$res_n <- df.hora.test$n - df.hora.test$pred_n
hist(df.hora.test$res_n)
sqrt(mean(df.hora.test$res_n**2 ))
# [1] 5.773248
#  Vemos que un RMSE muy parecido
qqnorm(df.hora.test$res_n)
# Ahora vamos a por un gráfico que nos diga las horas que hay más accidentes
# en Madrid
df.hora.n$pred <- predict(mod.horas.gam, df.hora.n, type="response" )
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred)) +
geom_line(size=2, alpha=.5, col = "red") +
geom_point(aes(y=n), col = "black", alpha=0.03) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
ggsave(predicciones, filename = "plots/predicciones.png")
save(list=ls(), file =  "accidentality_models.RData")
# Vamos a poner el año y el mes como efecto aleatorio y
# establecer la hora como un predictor con un máximo de
# 23 'nudos' que vienen a ser las 24 horas, menos uno.
# y añadir el año como efecto fijo (a raíz de lo visto en
# en el analisis exploratorio)
# La función de enlace será una quassipoisson, pues
# no contamos con que la media sea igual a la varianza
mod.horas.gam <- gam(n ~ s(hora, k = 23) +
s(mes, bs="re") +
mes +
ano,
family=quasipoisson,
data = df.hora.train)
(gam.summary <- summary(mod.horas.gam))
exp(-.4)
# Vamos a poner el año y el mes como efecto aleatorio y
# establecer la hora como un predictor con un máximo de
# 23 'nudos' que vienen a ser las 24 horas, menos uno.
# y añadir el año como efecto fijo (a raíz de lo visto en
# en el analisis exploratorio)
# La función de enlace será una quassipoisson, pues
# no contamos con que la media sea igual a la varianza
mod.horas.gam <- gam(n ~ s(hora, k = 23) +
s(mes, bs="re") +
mes +
ano,
family=gaussian,
data = df.hora.train)
(gam.summary <- summary(mod.horas.gam))
gam.summary$r.sq
mod.horas.gam <- gam(n ~ s(hora, k = 23) +
s(mes, bs="re") +
mes +
ano,
family=quasipoisson,
data = df.hora.train)
(gam.summary <- summary(mod.horas.gam))
gam.summary$r.sq
# Vamos a poner el año y el mes como efecto aleatorio y
# establecer la hora como un predictor con un máximo de
# 23 'nudos' que vienen a ser las 24 horas, menos uno.
# y añadir el año como efecto fijo (a raíz de lo visto en
# en el analisis exploratorio)
# La función de enlace será una quassipoisson, pues
# no contamos con que la media sea igual a la varianza
mod.horas.gam <- gam(n ~ s(hora, k = 23) +
s(mes, bs="re") +
mes +
ano,
family=quasipoisson(link=log),
data = df.hora.train)
(gam.summary <- summary(mod.horas.gam))
gam.summary$r.sq
2.7 %>% exp
.4 %>% exp
.4 %>% exp %>% log
df.hora.n$pred %>% summary
2.17 %>% exp
2.17+0.13 %>% exp
(2.17+0.13) %>% exp
rm(list=ls());gc()
if (!require('pacman')) install.packages('pacman'); library('pacman')
p_load(readxl, mgcv, tidyverse, knitr)
# datos tomados de https://datos.madrid.es/portal/site/egob/menuitem.c05c1f754a33a9fbe4b2e4b284f1a5a0/?vgnextoid=7c2843010d9c3610VgnVCM2000001f4a900aRCRD&vgnextchannel=374512b9ace9f310VgnVCM100000171f5a0aRCRD&vgnextfmt=default
load(file = "df.Rdata")
theme_set( theme_bw() )
# gráfico global para explorar
# truco para poner las etiquetas en cada facet
meses <- c("1"="Enero", "2"="Febrero", "3"="Marzo", "4"="Abril", "5"="Mayo",
"6"="Junio", "7"="Julio", "8"="Agosto", "9"="Septiembre",
"10"="Octubre", "11"="Noviembre", "12"="Diciembre")
accidentes_exploratorio <- ggplot(df.dia, aes(x=dia, y = n, col =  factor(ano) )) +
geom_smooth(se=FALSE) +
facet_wrap(.~mes, ncol = 4, labeller = as_labeller(meses)) +
ggtitle("Accidentes por día de la semana en Madrid en 2016-2017") +
scale_x_continuous(labels = c("L", "M", "M", "J", "V", "S", "D"), breaks = c(1:7))+
scale_color_discrete(name="Año")
accidentes_exploratorio
ggsave(accidentes_exploratorio, filename = "plots/accidentes_exploratorio.png")
# Veamos en detalle la variación por año
df.ano <- df.dia %>%  group_by(ano) %>% summarise(n = sum(n))
accidentes_año <- ggplot(df.ano , aes(x=ano, y = n)) +
geom_point(size = 4) +
geom_smooth(method="lm") +
ggtitle("Número total de accidente por año en Madrid") +
ylim(0,21000)
accidentes_año
ggsave(accidentes_año , filename = "plots/accidentes_año.png")
# seguimos explorando
df.dia.sm <- df.dia %>% group_by(ano, dia) %>%  summarise(media = mean(n))
df.dia.sm %>% kable
media_dia <- df.dia.sm %>% ggplot(aes(x=factor(dia), y=media)) +
geom_point() + coord_flip() + facet_wrap(~ano) +
scale_x_discrete(labels = c("L", "M", "M", "J", "V", "S", "D")) + xlab("Día") +
ylab("") + ggtitle("Media de accidentes por día cada año")
media_dia
ggsave(media_dia, filename = "plots/media_dia.png")
# obtenemos el numero de accidentes por hora
df.hora <- df %>% dplyr::select(n_parte, fecha, ano, mes,
mes_etiqueta, dia, dia_semana, hora, hora.c, mes.c, gravedad) %>%
distinct()
df.hora.n <- df.hora %>% group_by(ano, mes, dia, hora) %>%
summarise(n=n())
df.hora.media <- df.hora.n %>% group_by(mes, dia, hora) %>% summarise(media=mean(n))
#
media_hora_mes <- ggplot(df.hora.media, aes(x=hora, y = media)) +
geom_smooth() +
facet_wrap(.~mes, ncol = 4) +
ggtitle("Media de accidentes por hora y mes en Madrid en 2010-2017")
media_hora_mes
ggsave(media_hora_mes, filename="plots/media_hora_mes.png")
# Vamos a por el GAM
df.hora.n$ano_int <- as.integer(df.hora.n$ano)
df.hora.n$mes <- factor(df.hora.n$mes)
contrasts(df.hora.n$mes) <- contr.sum
# Separamos en datos de entrenamiento y de testeo
train <- ifelse(runif(nrow(df.hora.n)) < 0.8, TRUE, FALSE)
df.hora.train <-  df.hora.n[train,]
df.hora.train %>% head
# Vamos a poner el año y el mes como efecto aleatorio y
# establecer la hora como un predictor con un máximo de
# 23 'nudos' que vienen a ser las 24 horas, menos uno.
# y añadir el año como efecto fijo (a raíz de lo visto en
# en el analisis exploratorio)
# La función de enlace será una quassipoisson, pues
# no contamos con que la media sea igual a la varianza
mod.horas.gam <- gam(n ~ s(hora, k = 23) +
s(mes, bs="re") +
mes +
ano,
family=quasipoisson(link=log),
data = df.hora.train)
(gam.summary <- summary(mod.horas.gam))
gam.summary$r.sq
# Hacemos predicciones con el modelo
df.hora.train$pred <- predict(mod.horas.gam, type = "response" )
df.hora.train$res <- df.hora.train$n - df.hora.train$pred
# calculamos el RMSE
sqrt(mean(df.hora.train$res**2 ))
# [1] 5.612995
# ahora vamos a ver que tal se porta el modelo con datos
# que no son los de entrenamiento : )
df.hora.test <-   df.hora.n[!train,]
df.hora.test$pred_n <- predict(mod.horas.gam, df.hora.test, type="response")
df.hora.test$res_n <- df.hora.test$n - df.hora.test$pred_n
hist(df.hora.test$res_n)
sqrt(mean(df.hora.test$res_n**2 ))
# [1] 5.773248
#  Vemos que un RMSE muy parecido
qqnorm(df.hora.test$res_n)
# Ahora vamos a por un gráfico que nos diga las horas que hay más accidentes
# en Madrid
df.hora.n$pred <- predict(mod.horas.gam, df.hora.n, type="response" )
predicciones <- ggplot(df.hora.n, aes(x=hora, y=pred)) +
geom_line(size=2, alpha=.5, col = "red") +
geom_point(aes(y=n), col = "black", alpha=0.03) +
facet_wrap(~mes, labeller = as_labeller(meses)) +
ggtitle("Predicción (GAM) de accidentes por hora del día en Madrid 2010-17 en cada mes") +
ylab("Número de accidentes") +
xlab("Hora del accidente") + ylim(0,40)
predicciones
ggsave(predicciones, filename = "plots/predicciones.png")
save(list=ls(), file =  "accidentality_models.RData")
rm(list=ls());gc()
if (!require('pacman')) install.packages('pacman'); library('pacman')
p_load(readxl, tidyverse, lubridate, data.table)
files <- list.files("./data/", pattern = ".xlsx")
files <- paste0("./data/", files)
df <- data.frame()
for (file in files){
df0 <- read_excel(file)
df <- rbind(df, df0)
}
# Formatear columnas
colnames(df) = tolower(colnames(df))
colnames(df) = str_replace_all(colnames(df), "[^[:alnum:]]", " ")
colnames(df) = str_replace_all(colnames(df), " ", "_")
colnames(df) = str_replace_all(colnames(df), "__", "")
colnames(df) = str_replace_all(colnames(df), "º", "")
colnames(df) = str_replace_all(colnames(df), "â", "")
df$fecha = substr(df$fecha, 1, 10)
# Formatear horas
df$hora <- df$rango_horario %>%
substr(., 3, 5) %>%
str_replace_all(., ":", "") %>%
as.character() %>% as.numeric
# mes, año y fecha
df$mes <- month(ymd(df$fecha))
df$ano <- year(ymd(df$fecha))
df$fecha <- ymd(df$fecha)
# Dia semana
df <- df %>% mutate(dia = case_when(
dia_semana == "LUNES" ~ 1,
dia_semana == "MARTES" ~ 2,
dia_semana == "MIERCOLES" ~ 3,
dia_semana == "JUEVES" ~ 4,
dia_semana == "VIERNES" ~ 5,
dia_semana == "SABADO" ~ 6,
dia_semana == "DOMINGO" ~ 7
))
df <- df %>% mutate(mes_etiqueta = case_when(
mes == 1 ~ "Enero",
mes == 2 ~ "Febrero",
mes == 3 ~ "Marzo",
mes == 4 ~ "Abril",
mes == 5 ~ "Mayo",
mes == 6 ~ "Junio",
mes == 7 ~ "Julio",
mes == 8 ~ "Agosto",
mes == 9 ~ "Septiembre",
mes == 10 ~ "Octubre",
mes == 11 ~ "Noviembre",
mes == 12 ~ "Diciembre"
))
# Etiquetas de la gravedad del accidente
df <- df %>%  mutate(gravedad = case_when(
lesividad == "HL" ~ "Leve",
lesividad == "HG" ~ "Grave",
lesividad == "IL" ~ "Ileso",
lesividad == "MT" ~ "Fallecido",
lesividad == "NO ASIGNADA" ~ "Sin información"
))
df$tramo_edad %>% unique
df$edad <- substr(df$tramo_edad, 4,5)
df$edad %>% unique
df <- df %>%
mutate(edad = case_when(grepl("MA", edad) ~ "85",
grepl("CO", edad) ~"NA",
TRUE ~edad))
df <- df %>% mutate(edad=as.numeric(str_replace(edad, " ", "")))
df$hora.c <- sin(2*pi*df$hora/24 )
df$mes.c <- sin(2*pi*df$mes/12 )
df$gravedad <- as.factor(df$gravedad )
levels(df$gravedad) =  c("Sin información", "Ileso", "Leve", "Grave", "Fallecido")
lesividad <- df %>% group_by(tipo_persona, gravedad) %>%
summarise(n = n())
with(df,
print(ctable(tipo_persona, gravedad, prop = 'r', totals = FALSE),
omit.headings = TRUE))
with(df,
print(ctable(gravedad, sexo, prop = "c", totals = FALSE),
omit.headings = TRUE))
meses  <- c("Enero", "Febrero", "Marzo", "Abril", "Junio", "Julio",
"Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre")
df.tiempo <- df %>% dplyr::select(n_parte, fecha, ano, mes, mes_etiqueta, dia, dia_semana, gravedad) %>%
distinct()
levels(df.tiempo$mes_etiqueta) <- meses
df.dia <- df.tiempo %>% group_by(ano, mes, dia) %>%
summarise(n=n())
View(df)
df$distrito %>% unique
df$distrito %>% unique %>% length()
